from aiogram import  F, Router, Bot
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext

import app.keyboards as kb
from app.Rock_paper_scissors import rps
import app.stages


router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer('–°—Ç–∞—Ä—Ç', reply_markup=kb.main)
    await message.reply('–û—Ç–≤–µ—á–∞—é')


@router.message(Command('help'))
async def cmd_help(message: Message):
    await message.answer('–ù–∞–∂–∞—Ç–æ help')


@router.message(F.text == '–ö—Ä–µ—Å—Ç–∏–∫–∏ - –ù–æ–ª–∏–∫–∏')
async def tic_tac(message: Message):
    photo = './app/ttic.jpeg'
    text = '–í—ã–±—Ä–∞–Ω–∞ –∏–≥—Ä–∞ "–ö—Ä–µ—Å—Ç–∏–∫–∏ - –ù–æ–ª–∏–∫–∏"'
    await message.answer(text, reply_markup=kb.tictak)


@router.callback_query(F.data == 'ticGame')
async def ticGame(callback: CallbackQuery):
    await callback.answer('–í—ã –Ω–∞–∂–∞–ª–∏ –°—Ç–∞—Ä—Ç')
    await callback.message.answer('–ò–≥—Ä–∞–µ–º –≤ –ö—Ä–µ—Å—Ç–∏–∫–∏ - –ù–æ–ª–∏–∫–∏', reply_markup=kb.tictak_Game1)
    await callback.message.answer('ü§ñ', reply_markup=kb.tictak)

@router.callback_query(F.data == 'rockGame')
async def rockGame(callback: CallbackQuery):
    await callback.answer('–í—ã –Ω–∞–∂–∞–ª–∏ –°—Ç–∞—Ä—Ç')
    await callback.message.answer('–ò–≥—Ä–∞–µ–º –≤ –ö–∞–º–µ–Ω—å - –ù–æ–∂–Ω–∏—Ü—ã - –ë—É–º–∞–≥–∞', reply_markup=kb.rock_Game)


@router.message(F.text == '–ö–∞–º–µ–Ω—å')
async def rockPlay(message: Message):
    await message.answer(rps('–ö–∞–º–µ–Ω—å'))
@router.message(F.text == '–ù–æ–∂–Ω–∏—Ü—ã')
async def rockPlay(message: Message):
    await message.answer(rps('–ù–æ–∂–Ω–∏—Ü—ã'))
@router.message(F.text == '–ë—É–º–∞–≥–∞')
async def rockPlay(message: Message):
    await message.answer(rps('–ë—É–º–∞–≥–∞'))


@router.message(F.text == '–ö–∞–º–µ–Ω—å - –ù–æ–∂–Ω–∏—Ü—ã - –ë—É–º–∞–≥–∞')
async def Rock_paper_scissors(message: Message):
    text = '–í—ã–±—Ä–∞–Ω–∞ –∏–≥—Ä–∞ "–ö–∞–º–µ–Ω—å - –ù–æ–∂–Ω–∏—Ü—ã - –ë—É–º–∞–≥–∞"'
    await message.answer(text, reply_markup=kb.rock_)


@router.message(F.text == '–°—Ç–æ–ø –ò–≥—Ä–∞')
async def rockPlay(message: Message):
    await message.answer('–û–∫–µ–π', reply_markup=kb.main)